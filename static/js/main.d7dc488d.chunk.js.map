{"version":3,"sources":["components/Player/Player.jsx","components/Weather/Weather.jsx","components/SliderButtons/SliderButtons.jsx","components/Clock/Clock.jsx","components/Greeting/Greeting.jsx","components/Quote/Quote.jsx","App.js","redux/authReducer.js","redux/reduxStore.js","index.js"],"names":["Player","useState","currentTrack","setCurrentTrack","isPlaying","setIsPlaying","volumeValue","setVolumeValue","srcAudio","data","audioPlayer","useRef","toggleAudio","current","pause","play","changeSong","direction","a","Object","keys","songs","length","src","useEffect","volume","className","ref","onClick","type","min","max","step","value","onChange","e","target","map","item","style","color","artist","title","Weather","city","setCity","temp","setTemp","description","setDescription","wind","setWind","humidity","setHumidity","icon","getWeather","localStorage","getItem","axios","get","then","response","classList","add","weather","id","Math","floor","main","speed","setItem","SliderButtons","setBg","Clock","Date","toLocaleTimeString","currentTime","setCurrentTime","toLocaleDateString","currentDate","setCurrentDate","setInterval","hour12","weekday","month","day","Greeting","greetingText","pathOfDay","getHours","useDispatch","fullName","useSelector","state","auth","isAuth","loginValue","setLoginValue","onSubmit","preventDefault","console","log","placeholder","Quote","quoteContent","setQuoteContent","author","setAuthor","quoteLoading","setQuoteLoading","showQuote","setTimeout","quote","body","animation","App","img","Image","urls","regular","onload","document","initialState","userId","login","password","SET_USER_DATA","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d7dc488d.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport data from \"./songs.json\";\r\nimport \"./Player.css\"\r\n\r\nexport const Player = () => {\r\n  let [currentTrack, setCurrentTrack] = useState(1);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volumeValue, setVolumeValue] = useState(`0.5`)\r\n  const srcAudio = data[\"songs\"][`${currentTrack}`][\"link\"];\r\n  const audioPlayer = useRef();\r\n\r\n  const toggleAudio = () => {\r\n    if (!isPlaying) {\r\n      audioPlayer.current.play();\r\n      setIsPlaying(true);\r\n    } else {\r\n      audioPlayer.current.pause();\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  const changeSong = async (direction) => {\r\n    setCurrentTrack((currentTrack += direction));\r\n    await audioPlayer.current.pause()\r\n    if (currentTrack > Object.keys(data.songs).length) {\r\n      setCurrentTrack(1);\r\n    } else if (currentTrack < 1) {\r\n      setCurrentTrack(Object.keys(data.songs).length);\r\n    }\r\n    audioPlayer.current.src = data[\"songs\"][`${currentTrack}`][\"link\"];\r\n    audioPlayer.current.play();\r\n  };\r\n\r\n  useEffect(() => {\r\n    audioPlayer.current.volume = volumeValue\r\n    \r\n  }, [volumeValue])\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <audio ref={audioPlayer} src={srcAudio}/>\r\n      <div className=\"player-controls\">\r\n        <button\r\n          className=\"play-prev player-icon\"\r\n          onClick={() => changeSong(-1)}\r\n        ></button>\r\n        {isPlaying ? (\r\n          <button\r\n            className=\"play player-icon pause\"\r\n            onClick={toggleAudio}\r\n          ></button>\r\n        ) : (\r\n          <button className=\"play player-icon\" onClick={toggleAudio}></button>\r\n        )}\r\n        <button\r\n          className=\"play-next player-icon\"\r\n          onClick={() => changeSong(1)}\r\n        ></button>\r\n        <input type=\"range\" className=\"volume\" min=\"0\" max=\"1\" step=\"0.1\" value={volumeValue} onChange={(e) => setVolumeValue(e.target.value)} />\r\n      </div>\r\n      <ul className=\"play-list\">\r\n        {Object.keys(data.songs).map((item) => {\r\n          return (\r\n            <li\r\n              className=\"play-item\"\r\n              key={item}\r\n              onClick={async () => {\r\n                await setCurrentTrack(item)\r\n                setIsPlaying(true)\r\n                audioPlayer.current.play();\r\n              }\r\n            }\r\n              style={\r\n                (item != currentTrack) ? { color: \"white\" } : { color: \"#30d5c8\" }\r\n              }\r\n            >\r\n              {data.songs[item].artist}: \"{data.songs[item].title}\"\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Weather.css\";\r\n\r\nexport const Weather = () => {\r\n  const API_KEY = \"171811e697309d78e6a7383c0e567329\";\r\n  const [city, setCity] = useState(\"Tambov\");\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [wind, setWind] = useState(\"\");\r\n  const [humidity, setHumidity] = useState(\"\");\r\n  let icon = useRef(null);\r\n\r\n  const changeCity = (e) => {\r\n    localStorage.setItem(\"city\", e.target.value);\r\n    setCity(e.target.value);\r\n  };\r\n  \r\n  const getWeather = () => {\r\n    if (localStorage.getItem(\"city\")) {\r\n      setCity(localStorage.getItem(\"city\"));\r\n    }\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=en&appid=${API_KEY}&units=metric`\r\n      )\r\n      .then((response) => {\r\n        icon.current.classList.add(`owf-${response.data.weather[0].id}`);\r\n        setDescription(response.data.weather[0].description);\r\n        setTemp(Math.floor(response.data.main.temp));\r\n        setWind(Math.floor(response.data.wind.speed));\r\n        setHumidity(response.data.main.humidity);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeather()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"weather\">\r\n      <div className=\"search-block\">\r\n        <input\r\n        type=\"text\"\r\n        className=\"city\"\r\n        value={city}\r\n        onChange={changeCity}\r\n      />\r\n      <button className=\"search-button search\" onClick={getWeather}></button>\r\n      </div>\r\n      \r\n      <i className=\"weather-icon owf\" ref={icon}></i>\r\n      <div className=\"weather-error\"></div>\r\n      <div className=\"description-container\">\r\n        <span className=\"temperature\">{temp} &deg;C</span>\r\n        <span className=\"weather-description\">{description}</span>\r\n      </div>\r\n      <div className=\"wind\">Wind speed: {wind}</div>\r\n      <div className=\"humidity\">Humidity: {humidity}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const SliderButtons = ({setBg}) => {\r\n  return (\r\n      <div className=\"slider-icons\">\r\n        <button className=\"slide-prev slider-icon\" onClick={setBg}></button>\r\n        <button className=\"slide-next slider-icon\" onClick={setBg}></button>\r\n      </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./Clock.css\"\r\n\r\nexport const Clock = () => {\r\nconst [currentTime, setCurrentTime] = useState(new Date().toLocaleTimeString())\r\nconst [currentDate, setCurrentDate] = useState(new Date().toLocaleDateString())\r\n\r\nsetInterval(() => {\r\n  setCurrentTime(new Date().toLocaleTimeString('en-US', {hour12: false}))\r\n  setCurrentDate(new Date().toLocaleDateString('en-US', {weekday: 'long', month: 'long', day: 'numeric'}))\r\n}, 1000)\r\n\r\n\r\n  return (\r\n    <>\r\n      <time className=\"time\">{currentTime}</time>\r\n      <div className=\"date\">{currentDate}</div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Greeting.css\";\r\n\r\nexport const Greeting = () => {\r\n  let greetingText = \"\";\r\n  let pathOfDay = new Date().getHours();\r\n\r\n  if (pathOfDay < 7) {\r\n    greetingText = \"night\";\r\n  } else if (pathOfDay < 13) {\r\n    greetingText = \"morning\";\r\n  } else if (pathOfDay < 19) {\r\n    greetingText = \"evening\";\r\n  } else {\r\n    greetingText = \"night\";\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const fullName = useSelector((state) => state.auth.fullName);\r\n  const isAuth = useSelector((state) => state.auth.isAuth);\r\n  const [loginValue, setLoginValue] = useState('')\r\n\r\nconst submit = (e) => {\r\ne.preventDefault()\r\nconsole.log(loginValue)\r\n}\r\n\r\n  return (\r\n    <div className=\"greeting-container\">\r\n      {isAuth ? (\r\n        <span className=\"greeting\">\r\n          Good {greetingText}, {fullName}!\r\n        </span>\r\n      ) : (\r\n        <form \r\n        className=\"loginForm\"\r\n        onSubmit={submit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"name\"\r\n            placeholder=\"[Enter your name]\"\r\n            value={loginValue}\r\n            onChange={(e) => {setLoginValue(e.target.value)}}\r\n          />\r\n          <button className=\"loginBtn\" type=\"submit\">LogIn</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Quote.css\";\r\n\r\nexport const Quote = () => {\r\n  const [quoteContent, setQuoteContent] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [quoteLoading, setQuoteLoading] = useState(false);\r\n  const showQuote = () => {\r\n    setQuoteLoading(true);\r\n    axios.get(\"https://favqs.com/api/qotd\").then((response) => {\r\n      setTimeout(() => {\r\n        setQuoteContent(response.data.quote.body);\r\n        setAuthor(response.data.quote.author);\r\n        setQuoteLoading(false);\r\n      }, 1000);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    showQuote();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"change-quote\"\r\n        onClick={() => showQuote()}\r\n        style={quoteLoading ? { animation: `spin 1s infinite` } : {}}\r\n      ></button>\r\n      <div>\r\n        <div className=\"quote\">{quoteContent}</div>\r\n        <div className=\"author\">{author}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Player } from \"./components/Player/Player\";\nimport { Weather } from \"./components/Weather/Weather\";\nimport { SliderButtons } from \"./components/SliderButtons/SliderButtons\";\nimport { Clock } from \"./components/Clock/Clock\";\nimport { Greeting } from \"./components/Greeting/Greeting\";\nimport { Quote } from \"./components/Quote/Quote\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  useEffect(() => {\n    //document.body.style = `background: url(\"https://buyoncdn.ru/preset/112100256/pages_original/63/ef/45/63ef45a14a8c2f04ec3c98a2b5b3acc40afd58d9.jpg\") center/cover, rgba(0, 0, 0, 0.5);`\n    setBg();\n  }, []);\n\n  const setBg = () => {\n    axios\n      .get(\n        \"https://api.unsplash.com/photos/random?orientation=landscape&query=nature&client_id=aJCc9fzFH_gUnZ4nrG--nVY_D88ajHeqJyMAgd9rxb0\"\n      )\n      .then((response) => {\n        const img = new Image();\n        img.src = `${response.data.urls.regular}`;\n        img.onload = () => {\n          document.body.style = `background: url(${img.src}) center/cover, rgba(0, 0, 0, 0.5);`;\n        };\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <Player />\n        <Weather />\n      </header>\n      <main className=\"main\">\n        <SliderButtons setBg={setBg} />\n        <Clock />\n        <Greeting />\n      </main>\n      <footer className=\"footer\">\n        <Quote />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","let initialState = {\r\n    userId: 1,\r\n    login: '',\r\n    password: '',\r\n    fullName: '123213',\r\n    isAuth: false\r\n}\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { authReducer } from './authReducer';\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from './redux/reduxStore';\n\nReactDOM.render( \n<Provider store={store}>\n  < App />   \n</Provider>\n, document.getElementById(\"root\"));"],"sourceRoot":""}